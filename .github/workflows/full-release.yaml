name: Flutter Full Release Pipeline

on:
  push:
    branches: [main]

permissions:
  contents: write  # needed for pushing tags, commits, releases
  packages: write

jobs:
  release:
    runs-on: macos-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config user.name "NyeinChanAung203"
          git config user.email "nca05531@gmail.com"

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.29.1'

      - name: Install dependencies
        run: flutter pub get

      # 🔄 Bump patch version in pubspec.yaml
      - name: Bump patch version
        id: versioning
        run: |
          CURRENT_VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d+ -f1)
          BUILD_NUMBER=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d+ -f2)
          
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          NEW_BUILD=$((BUILD_NUMBER + 1))

          echo "New version: $NEW_VERSION+$NEW_BUILD"
          sed -i '' "s/^version: .*/version: $NEW_VERSION+$NEW_BUILD/" pubspec.yaml

          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "BUILD=$NEW_BUILD" >> $GITHUB_ENV

      # 📜 Generate Changelog
      - name: Generate changelog
        id: changelog
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            git log --pretty=format:"- %s" > changelog.txt
          else
            git log "$LAST_TAG"..HEAD --pretty=format:"- %s" > changelog.txt
          fi

          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          cat changelog.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # 📝 Commit updated pubspec.yaml
      - name: Commit version bump
        run: |
          git add pubspec.yaml
          git commit -m "chore(release): v${{ env.VERSION }}"
          git push origin main

      # 🏷 Create Git tag
      - name: Tag and push
        run: |
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Decode and save keystore file
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks

      - name: Configure keystore properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=upload-keystore.jks" >> android/key.properties

      # 📦 Build Android APK
      - name: Build Android APK
        run: flutter build apk --release

      # 📦 Build iOS IPA
      - name: Build iOS IPA
        run: |
          flutter build ios --release --no-codesign
          mkdir -p build/ios/ipa
          cp -r build/ios/iphoneos/Runner.app build/ios/ipa/

          # Optional: Zip the iOS app to attach
          cd build/ios/ipa
          zip -r Runner.ipa Runner.app

      # 🗃 Upload APK and IPA to GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          body: ${{ env.CHANGELOG }}
          files: |
            build/app/outputs/flutter-apk/app-release.apk
            build/ios/ipa/Runner.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
